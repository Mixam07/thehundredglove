{% comment %}
  Renders product buy-buttons.
  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} product form id.
  - section_id: {String} id of section to which this snippet belongs.
  - show_pickup_availability: {Boolean} for the pickup availability. If true the pickup availability is rendered, false - not rendered (optional).
  - bundle: {Boolean}

  Usage:
  {% render 'buy-buttons', block: block, product: product, product_form_id: product_form_id, section_id: section.id, show_pickup_availability: true %}
{% endcomment %}
{% assign in_gloves = false %}
{% for col in product.collections %}
  {% if col.handle == 'gloves' %}
    {% assign in_gloves = true %}
  {% endif %}
{% endfor %}

{% if in_gloves %}
  <style>
    kaching-bundle{
      display: none;
    }

    .numbers__title{
      display: flex;
      justify-content: center;
      position: relative;
      margin-bottom: 30px;
    }

    .numbers__title::before{
      content: "";
      position: absolute;
      top: 50%;
      left: 0;
      width: 100%;
      height: 2px;
      background-color: #000;
      transform: translateY(-50%);
      z-index: -1;
    }

    .numbers__title span{
      font-family: "Anton" !important;
      font-size: 24px;
      display: block;
      padding: 0 10px;
      background-color: #fff;
    }

    .numbers__list{
      display: flex;
      column-gap: 10px;
    }

    .numbers__wrapper{
      width: 100%;
    }

    .numbers__item{
      transition: .5s all;
      width: 100%;
      box-shadow: rgba(215, 85, 85, 0.3) 0px 0px 0px 2px inset;
      border-radius: 15px;
      padding: 5px;
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }

    .numbers__caption{
      text-transform: none;
      color: rgb(214, 85, 84);
      transition: .5s all;
      margin: 0;
      position: absolute;
      top: 0;
      left: 50%;
      transform: translate(-50%, -50%);
      padding: 5px 25px;
      box-shadow: rgba(215, 85, 85, 0.3) 0px 0px 0px 2px inset;
      border-radius: 10px;
      background-color: #fff;
      font-size: 14px;
      font-family: "Arial" !important;
      white-space: nowrap;
    }

    .numbers__prices{
      display: flex;
      column-gap: 5px;
      align-items: center;
      justify-content: center;
      margin-bottom: 10px;
    }

    .numbers__prevprice{
      text-decoration: line-through;
      font-size: 12px;
      color: rgb(85, 85, 85);
      font-size: 15px;
      margin: 0;
    }

    .numbers__price{
      font-weight: 700;
      font-size: 18px;
      margin: 0;
    }

    .numbers__info{
      padding: 40px 5px 10px 5px;
    }

    .numbers__desc{
      margin: 0;
      text-align: center;
      font-size: 14px;
    }

    .numbers__discount{
      width: 100%;
      padding: 7px;
      text-align: center;
      background-color: #B9B9B9;
      color: #fff;
      margin: 0;
      font-size: 10px;
      border-radius: 0 0 10px 10px;
      transition: .5s all;
    }

    .numbers__other{
      margin: 0;
      margin-top: 10px;
      padding-top: 10px;
      display: flex;
      column-gap: 5px;
      align-items: center;
      justify-content: center;
      position: relative;
    }

    .numbers__other::before{
      position: absolute;
      content: "";
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      width: calc(100% + 20px);
      height: 1px;
      background-color: #fff;
    }

    .numbers__other span{
      text-align: start;
      font-size: 8px;
    }

    .numbers__input:checked ~ .numbers__item{
      box-shadow: rgb(215, 85, 85) 0px 0px 0px 2px inset;
      background-color: #FFF1F1;
    }

    .numbers__input:checked ~ .numbers__item .numbers__caption{
      box-shadow: rgb(215, 85, 85) 0px 0px 0px 2px inset;
      color: #D75555;
    }

    .numbers__input:checked ~ .numbers__item .numbers__discount{
      background-color: #D75555;
    }

    .numbers__input{
      display: none;
    }

    .numbers__headline{
      text-align: center;
      margin: 0;
      font-size: 14px;
      margin-top: 10px;
    }

    .numbers__size{
      display: flex;
      justify-content: center;
      align-items: center;
      column-gap: 5px;
      font-size: 14px;
    }

    .numbers__wrap{
      display: none;
    }

    .numbers__input:checked ~ .numbers__item .numbers__wrap{
      display: block;
    }

    .numbers__select{
      color: #000;
      background-color: #fff;
      min-height: 30px;
      display: flex;
      align-items: center;
      box-shadow:  rgba(215, 85, 85, 0.3) 0px 0px 0px 1px inset;
      box-sizing: border-box;
      font-size: 14px;
      border-radius: 5px;
      padding: 7px 25px 7px 7px;
    }

    .numbers__size{
      margin-top: 5px;
    }

    @media (max-width: 750px) {
      .numbers__caption{
        font-size: 15px;
        padding: 5px 15px;
      }

      .numbers__info{
        padding-top: 10px;
        margin-bottom: 5px;
      }

      .numbers__prevprice{
        font-size: 9px;
      }

      .numbers__prices{
        margin-bottom: 0;
      }

      .numbers__desc{
        font-size: 10px;
      }

      .numbers__info{
        padding: 20px 2px 10px 2px;
      }

      .numbers__discount{
        padding: 5px;
        font-size: 7px;
        border-radius: 0 0 13px 13px;
      }

      .numbers__headline{
        font-size: 12px;
        margin-top: 5px;
      }

      .numbers__size *,
      .numbers__size{
        font-size: 10px;
      }

      .numbers__list{
        column-gap: 5px;
      }
    }
  </style>

  <div class="numbers">
    <h3 class="numbers__title">
      <span>BUNDLE & SAVE</span>
    </h3>
    <div class="numbers__list">
      <div class="numbers__wrapper">
        <input class="numbers__input" type="radio" value="1" name="number" data-number id="num1" checked />
        <label for="num1" class="numbers__item">
          <h4 class="numbers__caption">1 Pair</h4>
          <div class="numbers__info">
            <div class="numbers__prices">
              <p data-price-item class="numbers__price">{{ product.price | money | strip_html }}</p>
            </div>
            <p class="numbers__desc">Standard Price</p>
          </div>
        </label>
      </div>
      <div class="numbers__wrapper">
        <input class="numbers__input" type="radio" value="2" name="number" data-number id="num2" />
        <label for="num2" class="numbers__item">
          <h4 class="numbers__caption">2 Pairs</h4>
          <div class="numbers__info">
            <div class="numbers__prices">
             <p class="numbers__prevprice">
              {% if cart.currency.iso_code == "USD" %}
                $148.75
              {% elsif cart.currency.iso_code == "EUR" %}
                €130.87
              {% else %}
                £109.89
              {% endif %}
            </p>
            <p class="numbers__price">
              {% if cart.currency.iso_code == "USD" %}
                $129.99
              {% elsif cart.currency.iso_code == "EUR" %}
                €105.67
              {% else %}
                £90.00
              {% endif %}
            </p>
            </div>
            <p class="numbers__desc">Save 20%</p>
            <div class="numbers__wrap">
              <p class="numbers__headline">Size</p>
              <div class="numbers__size">
                #1
                <select name="variant-2" class="numbers__select">
                  {% for variant in product.variants %}
                      <option 
                          value="{{ variant.id }}" 
                          {% unless variant.available %}disabled{% endunless %}
                      >
                          {{ variant.option1 }}
                      </option>
                  {% endfor %}
                </select>
              </div>
              <div class="numbers__size">
                #2
                <select name="variant-2" class="numbers__select">
                  {% for variant in product.variants %}
                      <option 
                          value="{{ variant.id }}" 
                          {% unless variant.available %}disabled{% endunless %}
                      >
                          {{ variant.option1 }}
                      </option>
                  {% endfor %}
                </select>
              </div>
            </div>
          </div>
          <p class="numbers__discount">+1 Free Gift</p>
        </label>
      </div>
      <div class="numbers__wrapper">
        <input class="numbers__input" type="radio" value="3" name="number" data-number id="num3" />
        <label for="num3" class="numbers__item">
          <h4 class="numbers__caption">3 Pairs</h4>
          <div class="numbers__info">
            <div class="numbers__prices">
              <p class="numbers__prevprice">
                {% if cart.currency.iso_code == "USD" %}
                  $215.63
                {% elsif cart.currency.iso_code == "EUR" %}
                  €186.65
                {% else %}
                  £158.97
                {% endif %}
              </p>
              <p class="numbers__price">
                {% if cart.currency.iso_code == "USD" %}
                  $169.99
                {% elsif cart.currency.iso_code == "EUR" %}
                  €140.89
                {% else %}
                  £120.00
                {% endif %}
              </p>
            </div>
            <p class="numbers__desc">Save 35%</p>
            <div class="numbers__wrap">
              <p class="numbers__headline">Size</p>
              <div class="numbers__size">
                #1
                <select name="variant-3" class="numbers__select">
                  {% for variant in product.variants %}
                      <option 
                          value="{{ variant.id }}" 
                          {% unless variant.available %}disabled{% endunless %}
                      >
                          {{ variant.option1 }}
                      </option>
                  {% endfor %}
                </select>
              </div>
              <div class="numbers__size">
                #2
                <select name="variant-3" class="numbers__select">
                  {% for variant in product.variants %}
                      <option 
                          value="{{ variant.id }}" 
                          {% unless variant.available %}disabled{% endunless %}
                      >
                          {{ variant.option1 }}
                      </option>
                  {% endfor %}
                </select>
              </div>
              <div class="numbers__size">
                #3
                <select name="variant-3" class="numbers__select">
                  {% for variant in product.variants %}
                      <option 
                          value="{{ variant.id }}" 
                          {% unless variant.available %}disabled{% endunless %}
                      >
                          {{ variant.option1 }}
                      </option>
                  {% endfor %}
                </select>
              </div>
            </div>
          </div>
          <p class="numbers__discount">+2 Free Gift</p>
        </label>
      </div>
    </div>
  </div>
{% endif %}

<div {{ block.shopify_attributes }}>
  {%- if product != blank -%}
    {%- liquid
      assign gift_card_recipient_feature_active = false
      if block.settings.show_gift_card_recipient and product.gift_card?
        assign gift_card_recipient_feature_active = true
      endif

      assign show_dynamic_checkout = false
      if block.settings.show_dynamic_checkout and gift_card_recipient_feature_active == false
        assign show_dynamic_checkout = true
      endif
    -%}
    <div></div>

    <product-form class="product-form" data-hide-errors="{{ gift_card_recipient_feature_active }}">
      <div class="product-form__error-message-wrapper" role="alert" hidden>
        <svg
          aria-hidden="true"
          focusable="false"
          class="icon icon-error"
          viewBox="0 0 13 13"
        >
          <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
          <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
          <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
          <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
        </svg>
        <span class="product-form__error-message"></span>
      </div>
      
      {% if product.options.size < 2 %}
        <input
          type="hidden"
          name="id"
          value="{{ product.selected_or_first_available_variant.id }}"
          disabled
          class="product-variant-id"
        >
      {% endif %}

      {%- if gift_card_recipient_feature_active -%}
        {%- render 'gift-card-recipient-form', product: product, form: form, section: section -%}
      {%- endif -%}

      <div class="product-form__buttons">
        {%- liquid
          assign check_against_inventory = true
          if product.selected_or_first_available_variant.inventory_management != 'shopify' or  product.selected_or_first_available_variant.inventory_policy == 'continue'
            assign check_against_inventory = false
          endif
          if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
            assign quantity_rule_soldout = true
          endif
        -%}

      
        <button class="personal-btn" type="button">Add To Cart</button>
        <button
          id = "ProductSubmitButton-{{ section_id }}"
          type="submit"
          name="add"
          class="12 product-form__submit product-form__submitCustom button button--full-width {% if show_dynamic_checkout %}button--secondary{% else %}button--primary{% endif %}"
          {% if product.selected_or_first_available_variant.available == false or quantity_rule_soldout %}
            disabled
          {% endif %}
        >
          <span>
            {%- if product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
             
            {%- else -%}
              {{ 'products.product.add_to_cart' | t }}
            {%- endif -%}
          </span>
          <div class="loading-overlay__spinner hidden">
            <svg
              aria-hidden="true"
              focusable="false"
              class="spinner"
              viewBox="0 0 66 66"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
            </svg>
          </div>
        </button>
        
        {%- if show_dynamic_checkout -%}
          {{ form | payment_button }}
        {%- endif -%}
      </div>

    </product-form>
  {%- else -%}
    <div class="product-form">
      <div class="product-form__buttons form">
        <button
          type="submit"
          name="add"
          class="product-form__submit button button--full-width button--primary"
          disabled
        >
         
        </button>
      </div>
    </div>
  {%- endif -%}

  {%- if show_pickup_availability -%}
    {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

    {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities
      | where: 'pick_up_enabled', true
    -%}

    <pickup-availability
      class="product__pickup-availabilities no-js-hidden quick-add-hidden"
      {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %}
        available
      {% endif %}
      data-root-url="{{ routes.root_url }}"
      data-variant-id="{{ product.selected_or_first_available_variant.id }}"
      data-has-only-default-variant="{{ product.has_only_default_variant }}"
    >
      <template>
        <pickup-availability-preview class="pickup-availability-preview">
          {% render 'icon-unavailable' %}
          <div class="pickup-availability-info">
            <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
            <button class="pickup-availability-button link link--text underlined-link">
              {{ 'products.product.pickup_availability.refresh' | t }}
            </button>
          </div>
        </pickup-availability-preview>
      </template>
    </pickup-availability>

    <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}
</div>
<div style="display:none">
  <div class="presonalisation_values">
    {{ product.selected_or_first_available_variant.id }}
  </div>
</div> 

<script>
  document.querySelectorAll(".product__info-container .label").forEach(item => {
    item.addEventListener("click", (e) => {
      const price = item.getAttribute("data-price");
      const wrapper = document.querySelector("[data-price-item]");

      wrapper.textContent = price;
    });
  });

  const variantsList = [
  {% for variant in product.variants %}
  {
    id: "{{ variant.id }}",
    title: "{{ variant.title | escape }}"
  }{% if forloop.last == false %},{% endif %}
  {% endfor %}
];

const updateCartCount = () => {
  fetch('/cart.js')
    .then(res => res.json())
    .then(cart => {
      document.querySelector(".drawer").classList.add("active");
      render(cart);
    });
};

const addToCart = (items) => {
  fetch(`${window.Shopify.routes.root}cart/add.js`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ items })
  })
    .then(res => res.json())
    .then(res => {
      console.log(res);
      updateCartCount();
    })
    .catch(err => console.error('Error:', err));
};

const collectVariants = () => {
  const variants = [];
  const inputsList = document.querySelectorAll('fieldset.product-form__input input');

  if (inputsList.length > 0) {
    inputsList.forEach(input => {
      if (input.value && input.checked) {
        variants.push({ id: input.value, quantity: 1 });
      }
    });
  } else if (variants == 0) {
    const id = document.querySelector(".presonalisation_values").innerHTML?.trim()
    variants.push({ id: id, quantity: 1 });
  }

  return variants;
};

const addProductWithManyVariants = (packList, quantity) => {
  let items = [];
  const inputsList = document.querySelectorAll('fieldset.product-form__input input');
  if (inputsList.length > 0) {
    inputsList.forEach(input => {
      if (input.value && input.checked) {
        items.push({ id: input.value, quantity: 1 });
      }
    });
  }

  if(packList[0].checked && items.length == 0) return

  if(packList[0].checked) {
    document.querySelector(".another").classList.add("active");
    document.querySelector(".another").setAttribute("data-variant", items[0].id);

    return
  }

  const checkedIndex = [...packList].findIndex(item => item.checked);

  
  if (checkedIndex > 0) {
    items = []
    const wrapper = document.querySelectorAll(".numbers__item")[checkedIndex];
    const sizes = wrapper.querySelectorAll(".numbers__select");
    
    sizes.forEach(item => {
      items.push({ id: item.value, quantity: 1 });
    });
  }

  if(packList[1].checked){
    items.push(
      { id: "54858935828860", quantity: 1 },
      /*{ id: "45950893359360", quantity: 1 },*/
    );
  }else if(packList[2].checked){
    items.push(
      { id: "54858935828860", quantity: 1 },
      { id: "53598862836092", quantity: 1 },
      /*{ id: "45950893326592", quantity: 1 },*/
    );
  }

  addToCart(items);
};

const bundle = (inputs) => {
  const pack = []

  inputs.forEach(item => {
    const activeItem = item.querySelector(".active");
    const id = activeItem.getAttribute("data-value");
    pack.push({ id: id, quantity: 1 });
  });

  const id = document.querySelector(".presonalisation_values").innerHTML?.trim();
  pack.push({ id: id, quantity: 1 })

  addToCart(pack);
}

document.querySelector(".personal-btn")?.addEventListener("click", () => {
  const items = document.querySelectorAll(".pack__list-wrapper");

  if(items && items.length > 0){
    bundle(items);
  } else {
    const packList = document.querySelectorAll(".numbers__input");

    if (packList.length > 0) {
      addProductWithManyVariants(packList, 1);
    } else {
      const variants = collectVariants();
      if (variants.length > 0) addToCart(variants);
    }
  }
});
</script>